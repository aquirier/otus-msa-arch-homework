apiVersion: batch/v1
kind: Job
metadata:
  name: otus-zv-job-postgres-init
  namespace: homework
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 2
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: psql
        image: bitnami/postgresql:17.5.0-debian-12-r12
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets-infra-all
              key: postgresSuperUserPassword
        command:
        - /bin/bash
        - -c
        - |
          set -euo pipefail

          # Step 1: Create auth database if not exists
          psql -h otus-zv-postgres-postgresql.homework.svc.cluster.local -U postgres -v ON_ERROR_STOP=1 << 'EOSQL'
          SELECT 'CREATE DATABASE zakusvill_auth_db'
          WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'zakusvill_auth_db') \gexec
          EOSQL

          # Step 2: Create auth schema, particular user if not exists and assign schema ownership to that user
          psql -h otus-zv-postgres-postgresql.homework.svc.cluster.local -U postgres -d zakusvill_auth_db -v ON_ERROR_STOP=1 << 'EOSQL'
          CREATE SCHEMA IF NOT EXISTS auth;
          DO $script$
          BEGIN
             IF NOT EXISTS (
                SELECT FROM pg_catalog.pg_roles WHERE rolname = 'authuser'
             ) THEN
                CREATE ROLE authuser LOGIN PASSWORD 'pass' NOCREATEDB;
                GRANT CONNECT ON DATABASE zakusvill_auth_db TO authuser;
                ALTER SCHEMA auth OWNER TO authuser;
             END IF;
          END
          $script$ LANGUAGE plpgsql;
          EOSQL